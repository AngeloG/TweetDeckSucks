<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        E/EAAAAASUVORK5CYII=
</value>
  </data>
</root>